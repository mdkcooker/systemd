From 99373fecd9e19f4238b8815cce0dbacc3e4bd61b Mon Sep 17 00:00:00 2001
From: Kay Sievers <kay@vrfy.org>
Date: Tue, 12 Feb 2013 16:03:45 +0100
Subject: [PATCH 212/214] udev: use unique names for temporary files created in
 /dev

On Tue, Feb 12, 2013 at 2:18 PM, Robert Milasan <rmilasan@suse.com> wrote:
> Under some circumstances udev mixed with multipath fails:
>
> udevd-work[1376]:
> symlink(../../sdk, /dev/disk/by-id/scsi-36005076305ffc0670000000000002842.udev-tmp)
> failed: File exists udevd-work[1432]:
> rename(/dev/disk/by-id/scsi-36005076305ffc0850000000000000a88.udev-tmp, /dev/disk/by-id/scsi-36005076305ffc0850000000000000a88)
> failed: No such file or directory
>
> This is non-fatal, but there is no point of created the symlink or
> renaming the symlink if it already exists.
>
> Reference: https://bugzilla.novell.com/show_bug.cgi?id=791503

It looke like this now:
  stat("/dev/disk/by-id", {st_mode=S_IFDIR|0755, st_size=80, ...}) = 0
  symlink("../../sda", "/dev/disk/by-id/ata-INTEL...N.tmp-b8:0") = 0
  rename("/dev/disk/by-id/ata-INTEL...N.tmp-b8:0", "/dev/disk/by-id/ata-INTEL...N") = 0
(cherry picked from commit 38d70045d15d5bc463c097a6983a23502ff8a837)

Conflicts:
	src/udev/udev-node.c
---
 src/udev/udev-node.c | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/src/udev/udev-node.c b/src/udev/udev-node.c
index ca536be..f1fa0fd 100644
--- a/src/udev/udev-node.c
+++ b/src/udev/udev-node.c
@@ -31,15 +31,13 @@
 
 #include "udev.h"
 
-#define TMP_FILE_EXT                ".udev-tmp"
-
-static int node_symlink(struct udev *udev, const char *node, const char *slink)
+static int node_symlink(struct udev_device *dev, const char *node, const char *slink)
 {
         struct stat stats;
         char target[UTIL_PATH_SIZE];
         char *s;
         size_t l;
-        char slink_tmp[UTIL_PATH_SIZE + sizeof(TMP_FILE_EXT)];
+        char slink_tmp[UTIL_PATH_SIZE + 32];
         int i = 0;
         int tail = 0;
         int err = 0;
@@ -101,7 +99,7 @@ static int node_symlink(struct udev *udev, const char *node, const char *slink)
         }
 
         log_debug("atomically replace '%s'\n", slink);
-        util_strscpyl(slink_tmp, sizeof(slink_tmp), slink, TMP_FILE_EXT, NULL);
+        util_strscpyl(slink_tmp, sizeof(slink_tmp), slink, ".tmp-", udev_device_get_id_filename(dev), NULL);
         unlink(slink_tmp);
         do {
                 err = mkdir_parents_label(slink_tmp, 0755);
@@ -204,7 +202,7 @@ static void link_update(struct udev_device *dev, const char *slink, bool add)
                         util_delete_path(udev, slink);
         } else {
                 log_debug("creating link '%s' to '%s'\n", slink, target);
-                node_symlink(udev, target, slink);
+                node_symlink(dev, target, slink);
         }
 
         if (add) {
@@ -304,7 +302,6 @@ out:
 
 void udev_node_add(struct udev_device *dev, mode_t mode, uid_t uid, gid_t gid)
 {
-        struct udev *udev = udev_device_get_udev(dev);
         char filename[UTIL_PATH_SIZE];
         struct udev_list_entry *list_entry;
 
@@ -318,7 +315,7 @@ void udev_node_add(struct udev_device *dev, mode_t mode, uid_t uid, gid_t gid)
         snprintf(filename, sizeof(filename), "/dev/%s/%u:%u",
                  strcmp(udev_device_get_subsystem(dev), "block") == 0 ? "block" : "char",
                  major(udev_device_get_devnum(dev)), minor(udev_device_get_devnum(dev)));
-        node_symlink(udev, udev_device_get_devnode(dev), filename);
+        node_symlink(dev, udev_device_get_devnode(dev), filename);
 
         /* create/update symlinks, add symlinks to name index */
         udev_list_entry_foreach(list_entry, udev_device_get_devlinks_list_entry(dev))
-- 
1.8.1.5

