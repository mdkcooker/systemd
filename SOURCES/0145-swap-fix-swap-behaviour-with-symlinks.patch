From c42eadaed0178606669beb1039274b1a0b7c8752 Mon Sep 17 00:00:00 2001
From: Olivier Brunel <i.am.jack.mail@gmail.com>
Date: Sat, 13 Oct 2012 14:24:15 +0200
Subject: [PATCH 145/204] swap: fix swap behaviour with symlinks

Starting a swap unit pointing to (What) a symlink (e.g. /dev/mapper/swap
or /dev/disk/by-uuid/...) would have said unit marked active, following
the one using the "actual" device (/dev/{dm-1,sda3}), but that new unit
would be seen as inactive.
Since all requests to stop swap units would follow/redirect to it,
and it is seen inactive, nothing would be done (swapoff never called).

This is because this unit would be treated twice in
swap_process_new_swap, the second call to swap_add_one causing it to
eventually be marked inactive.
(cherry picked from commit b61e88162a6ce0c30da6984b0120959701283daa)
---
 src/core/swap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/core/swap.c b/src/core/swap.c
index c708b7f..c93b82e 100644
--- a/src/core/swap.c
+++ b/src/core/swap.c
@@ -415,7 +415,8 @@ static int swap_process_new_swap(Manager *m, const char *device, int prio, bool
                         return -ENOMEM;
 
                 dn = udev_device_get_devnode(d);
-                if (dn)
+                /* Skip dn==device, since that case will be handled below */
+                if (dn && !streq(dn, device))
                         r = swap_add_one(m, dn, device, prio, false, false, set_flags);
 
                 /* Add additional units for all symlinks */
-- 
1.8.1.5

