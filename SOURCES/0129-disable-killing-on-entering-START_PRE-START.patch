From f84aa6bd2421f9e9aece0263acc1b97a4b356268 Mon Sep 17 00:00:00 2001
From: Michal Schmidt <mschmidt@redhat.com>
Date: Wed, 2 May 2012 21:55:22 +0200
Subject: [PATCH 128/128] disable killing on entering START_PRE, START

The killing worked fine with the added "control" sub-cgroup, but that
brought other problems:
https://bugzilla.redhat.com/show_bug.cgi?id=816842
The "control" sub-cgroup had to be removed. In order not to reintroduce
https://bugzilla.redhat.com/show_bug.cgi?id=805942, comment out the
killing for F17 GA. Hopefully we'll get a proper fix later.

Almost a revert of commit 8f53a7b8ea9ba505f8fefe4df4aaa5a8aab1e2eb
"service: brutally slaughter processes that are running in the cgroup
when we enter START_PRE and START"
---
 src/service.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/service.c b/src/service.c
index 8b5c0b0..3e4b46b 100644
--- a/src/service.c
+++ b/src/service.c
@@ -2094,7 +2094,8 @@ static void service_enter_start(Service *s) {
         /* We want to ensure that nobody leaks processes from
          * START_PRE here, so let's go on a killing spree, People
          * should not spawn long running processes from START_PRE. */
-        cgroup_bonding_kill_list(UNIT(s)->cgroup_bondings, SIGKILL, true, NULL);
+        // F17, bz816842, bz805942
+        //cgroup_bonding_kill_list(UNIT(s)->cgroup_bondings, SIGKILL, true, NULL);
 
         if (s->type == SERVICE_FORKING) {
                 s->control_command_id = SERVICE_EXEC_START;
@@ -2168,7 +2169,8 @@ static void service_enter_start_pre(Service *s) {
 
                 /* Before we start anything, let's clear up what might
                  * be left from previous runs. */
-                cgroup_bonding_kill_list(UNIT(s)->cgroup_bondings, SIGKILL, true, NULL);
+                // F17, bz816842, bz805942
+                //cgroup_bonding_kill_list(UNIT(s)->cgroup_bondings, SIGKILL, true, NULL);
 
                 s->control_command_id = SERVICE_EXEC_START_PRE;
 
-- 
1.7.10

