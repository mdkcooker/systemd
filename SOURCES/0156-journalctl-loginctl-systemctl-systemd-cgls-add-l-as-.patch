From 5a604f4a6b7c564601d044873ab1f530d817003c Mon Sep 17 00:00:00 2001
From: Daniel Albers <daniel@lbe.rs>
Date: Mon, 17 Jun 2013 11:36:35 +0200
Subject: [PATCH 156/160] journalctl,loginctl,systemctl,systemd-cgls: add -l as
 alias for --full

https://bugs.freedesktop.org/show_bug.cgi?id=65850
(cherry picked from commit 98a6e132b5b85999f7e3dce158e826ffeecc1553)
---
 man/journalctl.xml                          | 1 +
 man/loginctl.xml                            | 1 +
 man/systemctl.xml                           | 1 +
 man/systemd-cgls.xml                        | 1 +
 shell-completion/bash/systemctl             | 2 +-
 shell-completion/systemd-zsh-completion.zsh | 4 ++--
 src/cgls/cgls.c                             | 7 +++----
 src/journal/journalctl.c                    | 9 ++++-----
 src/login/loginctl.c                        | 7 +++----
 src/systemctl/systemctl.c                   | 7 +++----
 10 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/man/journalctl.xml b/man/journalctl.xml
index 8f6a5a6..b899c3a 100644
--- a/man/journalctl.xml
+++ b/man/journalctl.xml
@@ -138,6 +138,7 @@
                         </varlistentry>
 
                         <varlistentry>
+                                <term><option>-l</option></term>
                                 <term><option>--full</option></term>
 
                                 <listitem><para>Show all (printable) fields in
diff --git a/man/loginctl.xml b/man/loginctl.xml
index 2c8d982..e76ee95 100644
--- a/man/loginctl.xml
+++ b/man/loginctl.xml
@@ -111,6 +111,7 @@
                         </varlistentry>
 
                         <varlistentry>
+                                <term><option>-l</option></term>
                                 <term><option>--full</option></term>
 
                                 <listitem><para>Do not ellipsize cgroup
diff --git a/man/systemctl.xml b/man/systemctl.xml
index 54573e8..9ab5c8b 100644
--- a/man/systemctl.xml
+++ b/man/systemctl.xml
@@ -175,6 +175,7 @@ along with systemd; If not, see <http://www.gnu.org/licenses/>.
       </varlistentry>
 
       <varlistentry>
+        <term><option>-l</option></term>
         <term><option>--full</option></term>
 
         <listitem>
diff --git a/man/systemd-cgls.xml b/man/systemd-cgls.xml
index 6249d05..53e7f7d 100644
--- a/man/systemd-cgls.xml
+++ b/man/systemd-cgls.xml
@@ -113,6 +113,7 @@
                         </varlistentry>
 
                         <varlistentry>
+                                <term><option>-l</option></term>
                                 <term><option>--full</option></term>
 
                                 <listitem><para>Do not ellipsize cgroup
diff --git a/shell-completion/bash/systemctl b/shell-completion/bash/systemctl
index a05b756..ceca334 100644
--- a/shell-completion/bash/systemctl
+++ b/shell-completion/bash/systemctl
@@ -70,7 +70,7 @@ _systemctl () {
         local i verb comps mode
 
         local -A OPTS=(
-               [STANDALONE]='--all -a --reverse --after --before --defaults --fail --ignore-dependencies --failed --force -f --full --global
+               [STANDALONE]='--all -a --reverse --after --before --defaults --fail --ignore-dependencies --failed --force -f --full -l --global
                              --help -h --no-ask-password --no-block --no-legend --no-pager --no-reload --no-wall
                              --quiet -q --privileged -P --system --user --version --runtime'
                       [ARG]='--host -H --kill-mode --kill-who --property -p --signal -s --type -t --root'
diff --git a/shell-completion/systemd-zsh-completion.zsh b/shell-completion/systemd-zsh-completion.zsh
index 6862891..c85e00e 100644
--- a/shell-completion/systemd-zsh-completion.zsh
+++ b/shell-completion/systemd-zsh-completion.zsh
@@ -16,7 +16,7 @@ _ctls()
                 '--after[Show units ordered after]' \
                 '--before[Show units ordered before]' \
                 '--failed[Show only failed units]' \
-                "--full[Don't ellipsize unit names on output]" \
+                {-l,--full}"[Don't ellipsize unit names on output]" \
                 '--fail[When queueing a new job, fail if conflicting jobs are pending]' \
                 '--ignore-dependencies[When queueing a new job, ignore all its dependencies]' \
                 '--kill-who=[Who to send signal to]:killwho:(main control all)' \
@@ -81,7 +81,7 @@ _ctls()
                 {-n,--lines=}'[Number of journal entries to show]:integer' \
                 '--no-tail[Show all lines, even in follow mode]' \
                 {-o,--output=}'[Change journal output mode]:output modes:_outputmodes' \
-                '--full[Show long fields in full]' \
+                {-l,--full}'[Show long fields in full]' \
                 {-a,--all}'[Show all fields, including long and unprintable]' \
                 {-q,--quiet}"[Don't show privilege warning]" \
                 '--no-pager[Do not pipe output into a pager]' \
diff --git a/src/cgls/cgls.c b/src/cgls/cgls.c
index ef3e567..f232731 100644
--- a/src/cgls/cgls.c
+++ b/src/cgls/cgls.c
@@ -49,7 +49,7 @@ static void help(void) {
                "     --version        Show package version\n"
                "     --no-pager       Do not pipe output into a pager\n"
                "  -a --all            Show all groups, including empty\n"
-               "  --full              Do not ellipsize output\n"
+               "  -l --full           Do not ellipsize output\n"
                "  -k                  Include kernel threads in output\n"
                "  -M --machine        Show container\n",
                program_invocation_short_name);
@@ -60,7 +60,6 @@ static int parse_argv(int argc, char *argv[]) {
         enum {
                 ARG_NO_PAGER = 0x100,
                 ARG_VERSION,
-                ARG_FULL,
         };
 
         static const struct option options[] = {
@@ -68,7 +67,7 @@ static int parse_argv(int argc, char *argv[]) {
                 { "version",   no_argument,       NULL, ARG_VERSION  },
                 { "no-pager",  no_argument,       NULL, ARG_NO_PAGER },
                 { "all",       no_argument,       NULL, 'a'          },
-                { "full",      no_argument,       NULL, ARG_FULL     },
+                { "full",      no_argument,       NULL, 'l'          },
                 { "machine",   required_argument, NULL, 'M'          },
                 { NULL,        0,                 NULL, 0            }
         };
@@ -99,7 +98,7 @@ static int parse_argv(int argc, char *argv[]) {
                         arg_all = true;
                         break;
 
-                case ARG_FULL:
+                case 'l':
                         arg_full = true;
                         break;
 
diff --git a/src/journal/journalctl.c b/src/journal/journalctl.c
index 1a441dd..7baea23 100644
--- a/src/journal/journalctl.c
+++ b/src/journal/journalctl.c
@@ -125,7 +125,7 @@ static int help(void) {
                "  -o --output=STRING     Change journal output mode (short, short-monotonic,\n"
                "                         verbose, export, json, json-pretty, json-sse, cat)\n"
                "  -x --catalog           Add message explanations where available\n"
-               "     --full              Do not ellipsize fields\n"
+               "  -l --full              Do not ellipsize fields\n"
                "  -a --all               Show all fields, including long and unprintable\n"
                "  -q --quiet             Don't show privilege warning\n"
                "     --no-pager          Do not pipe output into a pager\n"
@@ -167,7 +167,6 @@ static int parse_argv(int argc, char *argv[]) {
                 ARG_SYSTEM,
                 ARG_ROOT,
                 ARG_HEADER,
-                ARG_FULL,
                 ARG_SETUP_KEYS,
                 ARG_FILE,
                 ARG_INTERVAL,
@@ -190,7 +189,7 @@ static int parse_argv(int argc, char *argv[]) {
                 { "follow",       no_argument,       NULL, 'f'              },
                 { "output",       required_argument, NULL, 'o'              },
                 { "all",          no_argument,       NULL, 'a'              },
-                { "full",         no_argument,       NULL, ARG_FULL         },
+                { "full",         no_argument,       NULL, 'l'              },
                 { "lines",        optional_argument, NULL, 'n'              },
                 { "no-tail",      no_argument,       NULL, ARG_NO_TAIL      },
                 { "new-id128",    no_argument,       NULL, ARG_NEW_ID128    },
@@ -229,7 +228,7 @@ static int parse_argv(int argc, char *argv[]) {
         assert(argc >= 0);
         assert(argv);
 
-        while ((c = getopt_long(argc, argv, "hefo:an::qmbkD:p:c:u:F:xr", options, NULL)) >= 0) {
+        while ((c = getopt_long(argc, argv, "hefo:aln::qmbkD:p:c:u:F:xr", options, NULL)) >= 0) {
 
                 switch (c) {
 
@@ -274,7 +273,7 @@ static int parse_argv(int argc, char *argv[]) {
 
                         break;
 
-                case ARG_FULL:
+                case 'l':
                         arg_full = true;
                         break;
 
diff --git a/src/login/loginctl.c b/src/login/loginctl.c
index b09aa37..087e52d 100644
--- a/src/login/loginctl.c
+++ b/src/login/loginctl.c
@@ -1297,7 +1297,7 @@ static int help(void) {
                "  -p --property=NAME     Show only properties by this name\n"
                "  -a --all               Show all properties, including empty ones\n"
                "     --kill-who=WHO      Who to send signal to\n"
-               "     --full              Do not ellipsize output\n"
+               "  -l --full              Do not ellipsize output\n"
                "  -s --signal=SIGNAL     Which signal to send\n"
                "     --no-ask-password   Don't prompt for password\n"
                "  -H --host=[USER@]HOST  Show information for remote host\n"
@@ -1339,7 +1339,6 @@ static int parse_argv(int argc, char *argv[]) {
                 ARG_NO_PAGER,
                 ARG_KILL_WHO,
                 ARG_NO_ASK_PASSWORD,
-                ARG_FULL,
         };
 
         static const struct option options[] = {
@@ -1353,7 +1352,7 @@ static int parse_argv(int argc, char *argv[]) {
                 { "host",            required_argument, NULL, 'H'                 },
                 { "privileged",      no_argument,       NULL, 'P'                 },
                 { "no-ask-password", no_argument,       NULL, ARG_NO_ASK_PASSWORD },
-                { "full",            no_argument,       NULL, ARG_FULL            },
+                { "full",            no_argument,       NULL, 'l'                 },
                 { NULL,              0,                 NULL, 0                   }
         };
 
@@ -1425,7 +1424,7 @@ static int parse_argv(int argc, char *argv[]) {
                         parse_user_at_host(optarg, &arg_user, &arg_host);
                         break;
 
-                case ARG_FULL:
+                case 'l':
                         arg_full = true;
                         break;
 
diff --git a/src/systemctl/systemctl.c b/src/systemctl/systemctl.c
index 661c7b1..fd2eea3 100644
--- a/src/systemctl/systemctl.c
+++ b/src/systemctl/systemctl.c
@@ -4599,7 +4599,7 @@ static int systemctl_help(void) {
                "                      the 'list-unit-files' command instead.\n"
                "     --reverse        Show reverse dependencies with 'list-dependencies'\n"
                "     --failed         Show only failed units\n"
-               "     --full           Don't ellipsize unit names on output\n"
+               "  -l --full           Don't ellipsize unit names on output\n"
                "     --fail           When queueing a new job, fail if conflicting jobs are\n"
                "                      pending\n"
                "     --irreversible   Create jobs which cannot be implicitly cancelled\n"
@@ -4817,7 +4817,6 @@ static int systemctl_parse_argv(int argc, char *argv[]) {
                 ARG_NO_PAGER,
                 ARG_NO_WALL,
                 ARG_ROOT,
-                ARG_FULL,
                 ARG_NO_RELOAD,
                 ARG_KILL_WHO,
                 ARG_NO_ASK_PASSWORD,
@@ -4838,7 +4837,7 @@ static int systemctl_parse_argv(int argc, char *argv[]) {
                 { "before",    no_argument,       NULL, ARG_BEFORE    },
                 { "show-types", no_argument,      NULL, ARG_SHOW_TYPES },
                 { "failed",    no_argument,       NULL, ARG_FAILED    },
-                { "full",      no_argument,       NULL, ARG_FULL      },
+                { "full",      no_argument,       NULL, 'l'           },
                 { "fail",      no_argument,       NULL, ARG_FAIL      },
                 { "irreversible", no_argument,    NULL, ARG_IRREVERSIBLE },
                 { "ignore-dependencies", no_argument, NULL, ARG_IGNORE_DEPENDENCIES },
@@ -5019,7 +5018,7 @@ static int systemctl_parse_argv(int argc, char *argv[]) {
                         arg_root = optarg;
                         break;
 
-                case ARG_FULL:
+                case 'l':
                         arg_full = true;
                         break;
 
-- 
1.8.3.1

